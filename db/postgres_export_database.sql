DROP TABLE IF EXISTS news CASCADE;
DROP TABLE IF EXISTS news_comments CASCADE;
DROP TABLE IF EXISTS news_authors CASCADE;
DROP TABLE IF EXISTS news_tags CASCADE;
DROP TABLE IF EXISTS news_to_authors CASCADE;
DROP TABLE IF EXISTS news_to_tags CASCADE;

BEGIN;
CREATE TABLE IF NOT EXISTS news (
	news_id BIGSERIAL PRIMARY KEY NOT NULL,
	news_title VARCHAR(100) NOT NULL,
	news_creation_time TIMESTAMP(0) NOT NULL,
	news_last_modification_time TIMESTAMP(0),
	news_description VARCHAR(300) NOT NULL,
	news_full_text VARCHAR(2000) NOT NULL
);

CREATE TABLE IF NOT EXISTS news_comments (
	nc_id BIGSERIAL PRIMARY KEY NOT NULL,
	nc_news_id BIGINT NOT NULL REFERENCES news(news_id) ON DELETE CASCADE ON UPDATE CASCADE,
	nc_text VARCHAR(300) NOT NULL,
	nc_creation_time TIMESTAMP(0) NOT NULL
);

CREATE TABLE IF NOT EXISTS news_authors (
	na_id BIGSERIAL PRIMARY KEY NOT NULL,
	na_name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS news_tags (
	nt_id BIGSERIAL PRIMARY KEY NOT NULL,
	nt_name VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS news_to_authors (
	news_id BIGINT NOT NULL REFERENCES news(news_id) ON DELETE CASCADE ON UPDATE CASCADE,
	na_id BIGINT NOT NULL REFERENCES news_authors(na_id) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(news_id, na_id)
);

CREATE TABLE IF NOT EXISTS news_to_tags (
	news_id BIGINT NOT NULL REFERENCES news(news_id) ON DELETE CASCADE ON UPDATE CASCADE ,
	nt_id BIGINT NOT NULL REFERENCES news_tags(nt_id) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(news_id, nt_id)
);
COMMIT;